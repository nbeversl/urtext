
About Urtext
   
 {{ What Urtext Is 

    ur-text /ˈo͝orˌtekst/ : "an original or the earliest version of a text, to which later versions can be compared"

    {{ Description
        
        Urtext is a syntax and compiler for writing using plaintext. 

        It is a structured but flexible syntax that allows freeform, fragmentary writing while permitting gradual aggregation of content with other content. You can start with a single note and build it gradually into a large, structured document. Urtext parses content into outlines (trees) that can have recursive (tangled) structure.

Urtext is designed for both organized and disorganized use. 

        Urtext is implemented in Python and can be used wherever Python is used. Currently there is a package for Sublime Text (Mac/Windows/Linux) and a script for Pythonista (iOS). /-- ID:yv2 --/ }}

    {{ Comparison with Other Tools
        
            Urtext shares some characteristics with markup languages such as Markdown or LaTeX, with important differences:
            
            - It is author-facing, not forward/reader-facing. Though it can export, Urtext is not primarily a conversion or document generation tool. 
            
            - Urtext consolidates content, user interface, and scripting into a single, compilable syntax. Texts can generate and modify themselves based on rules embedded directly into their own content.
            
             /-- ID:h8z --/ }}

    {{  Uses
        
        Urtext has many uses, including but limited to:
    
            - prose writing
            - research
            - documentation
            - journaling
            - project organization
            - notetaking
        
            ... and any other writing or information management that can be done in text form.
 
     /-- ID:lhs --/ }}

    {{  Features and Characteristics 

        Many of the following characteristics and features were original requirements when creating Urtext. Though many can be found in other tools, when combined, they eliminate most other tools.
       
         {{   Features

            - Urtext can organize and compile content spread across many files.

            Content elements can be connected to one another in tree-like, recursive (tangled), and other, non-hierarchical ways.

            - It has customizable and extensible metadata that does not rely on the file system.


    /-- ID:gv1 --/ }}


       {{  Other Characteristics

            - Urtext is decoupled from any particular text editor or interface ; it can be incorporated into any environment that runs Python, including any scriptable text editor.

            - Urtext uses plain text files. Plaintext is fast, human-readable, flexible, cross-platform, device-portable, and future-proof.
   
            - It is usable across multiple platforms and devices.
   
            
   
            - It can incorporate other plaintext syntaxes.
   
            - There is no need to interact directly with the file system (creating, naming, saving, organizing files). File management is handled entirely by the compiler.
   
            - Extensible, hackable, customizable. This year's needs might not be next year's. One person's needs might not be another's.
   
            - Does not require years to master.
   
            - Future-proof. No reliance on anything that may not exist in 5 or 100 years. 
   
            - Can be used on mobile devices without depending on live internet or cellular data; content can wholly reside on, and sync among, devices. /-- ID:nte --/ }}

       

        /--ID:010--/}}

   

    {{  Additional Features

        - Syntax highlighting to delineate content from structure/syntax.

        - Fuzzy search within files. This is already implemented in most modern desktop editors and some mobile text editors, but I wanted the tool to have its own version of this that didn't rely on the editor features or environment.

        - Version control (using Git, for example). This possiblity is implicit in the commitment to plaintext but important enough to mention.

        /--ID:006--/}}



    /--ID:00d; tag:definition--/


    }}

{{  Ideas and Requirements Behind Urtext



{{  Characteristics

    As a result of the above, Urtext came out having the following characteristics:
   
        - It is offered as a syntax and a system, not as a particular implementation. 

        - It is open source. See here (>01o) for information on how to modify it for your own purposes.

        - It has two components:

            - Static plaintext files in a loosely specified syntax.
            
            - A service that organizes, and compiles the files. This can run either manually or continuously in "watchdog" mode. In this Sublime package, it runs in watchdog mode.

    /-- ID:007 --/ }}
/--ID:008--/ }} 

{{ About This Implementation

    Sublime Text is a modern, programmable text editor. 

    This package is an example implementation of Urtext using Sublime Text. It has two components:

        - An embedded pure Python module called "Urtext". It could be used in any Python environment and has no special relationship to Sublime Text. The Python module also has its own Github and can be used independently of the Sublime package. For instance, success has been found running it on iPhone using Pythonista. See (>014).

        - A Sublime package that uses Sublime Text as a user interface for editing Urtext files. The package includes the Urtext module (above) as well as a syntax definition, two color schemes, commands, and key bindings for Sublime Text.    

    As a result of this combination, some features in this documentation are built into Urtext, while others are part of only the Sublime Text implementation. An effort has been made to indicate which features are which. 

    /-- ID:01u --/ }}
                                                                                                    
/-- ID:013
index:01
Timestamp:<Wed., Jun. 05, 2019, 10:01 PM>
tags: 
 --/