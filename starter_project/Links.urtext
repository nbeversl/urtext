Links _

	{ Node Links _

	  To link from one node to another, use the pipe and a space (`| `) followed immediately by a node ID, followed by a space and the right angle bracket (` >`). Examples of links are throughout this starter project.

		{ Urtext Selector List for Linking _

		  Two Selectors can make linking quick and easy:

		  See | Copy Link to Here >
		  and |? Link to Node >
		  See also | Cross-Project Linking >>
		}

	}

	{ Dynamic IDs _

	  Whenever the ID of a node changes, Urtext will try to update links to that node to the new ID.
	}

	{ Link to Character Location _

	  Node links may link to specific locations by following the closing wrapper with a colon and a character number.

	  Example:
	  | File Links >:50 (links to character 50 in | File Links >, below)

	  Since character locations on every edit, this syntax is most useful when outputted dynamically.
	  See the | COLLECT() > call for an example use.

	}

	{ File Links _

	  Links to files can be made by writing `|/ `, followed immediately with a relative or absolute file path, and ending with a right angle bracket ` >`:
	  Example: |/ README.md >

		{ Making a File Link With a Dialog in Sublime Text _

		  Start typing "link to file" in the Sublime Command Palette and select "Urtext: Link To File ...",
		  or press `Ctrl + Shift + J`.

		  Select a file from the dialog to insert the file link.

		  Files with extensions not in the `open_in_editor` key in | project_settings > will open in the system default application.

		}
	}

	{ Web/HTTP(S) Links _

	  HTTP(S) links are recognized automatically and will open in the system default browser.
	  Example: https://urtext.co/
	}

	{ Missing Links _

	  When any syntax links to a node or file not found, a question mark will immediately follow the opening wrapper. Examples:

	  |? Link to a node that does not exist in this project >
	  |/? link/to/file-that-does-not-exist >

	  The question mark will disappear if the node or file is created.

	  Missing link markers are added and removed by Urtext and are "read-only" -- you can add or delete them but they will revert on save.
	}

	{ Action Links _

	  The exclamation mark `!` can be inserted after the opening pipe to make an action link.
	  Action links trigger execution of their | Frames > without visiting the frame or target node.

	  Example:

	  Clicking this link will open https://urtext.co/.
	  |! Open Urtext Website >

	  To have an effect, the node must be the target of a frame (see | Frames >)
	}

	{ Selector Links _

	  The colon `:` modifier after the opening pipe indicates a selector link.
	  The text inside the link is a reference to an Urtext Selector, or unit of functionality. (See |? Key Binding: >)

	  Selector links are an alternative to menus, dialogs, and or other user interface elements, so all Urtext functionality is accessible from the text.

	  Example:
	  The following selector will open a random node in this project:
	  |: random_node >

	  The referenced selector must be available in the project.
	  See | Selectors > for more information.

	}

See next: | Metadata Syntax >
