Dynamic Output _

Nodes can have dynamically updated content using definitions that query, sort, transform and format text, or execute arbitrary Python code. 

`ctrl + shift + Right-Bracket` creates a new dynamic definition in Sublime, auto-populated with a corresponding empty inline node. 

Dynamic Definitions do not create their target nodes; the target node must exist, or the definition will have no effect.

Definitions are specified with double square brackets [[ ]]. There are no restrictions on spacing, indentation, newlines, or other arbitrary text or whitespace.  

Dynamic Definitions can be written anywhere; it is not necessary to store the definition in the same file to which it refers.

The most basic definition includes:

- a target (output) node, using the TARGET() directive
- specifying what nodes to include, using the INCLUDE directive

This example definition populates the node immediately below it, which lists all nodes in this project.

[[ 	
	TARGET(| Example Use of TARGET(), INCLUDE() and TREE() >) 	
	Specifies the node to dynamically populate with output.
	
	INCLUDE(*)  
	or +(*)
	Specifies nodes to include in output. The asterisk (as here) includes all nodes in the project.
]]

Nodes with dynamic output begin with the tilde character `~`. The tilde pushes a scope onto the node that shades is background slightly so that dynamic nodes can be easily distinguished.

Without any other directive, the default output is a list of links to the included nodes, in alphabetical order by ID. 

{~ Example Use of TARGET(), INCLUDE() and TREE() _
| AND/OR >
| About Urtext >
| All Directives >
| Arguments >
| Bracket Node Wrappers >
| Bracket Nodes >
| Bugs >
| Bullet >
| Bullet Nodes >
| COLLECT() >
| Case-sensitivity >
| Code to exec >
| Commands can be accecesed through the Sublime Text Command Pallete, Command-Shift-P. >
| Cross-Project Linking >
| Disable Prompts for File Reload >
| Dynamic IDs >
| Dynamic Output >
| EXCLUDE() >
| EXEC() >
| Escaping Curly Brackets >
| Escaping and Embedding >
| Example Search Results >
| Example Use of COLLECT() >
| Example Use of INCLUDE and EXCLUDE >
| Example Use of LIMIT() >
| Example Use of MAX_LENGTH >
| Example Use of SHOW() >
| Example Use of SORT() >
| Example Use of STATS() >
| Example Use of TEXT() >
| Example Use of TREE() >
| Example Use of WHEN() >
| Example Use of self Virtual Output >
| Example use of LOG >
| Extensible >
| Features >
| Features and Philosophy >
| File Links >
| File Naming >
| File Nodes >
| File Output >
| Files >
| Flags ^ INCLUDE() and EXCLUDE() >
| Flags ^ SORT() >
| Flags ^ WHEN() and Action Links >
| Freeform, Flexible Syntax >
| Full Screen / Distraction Free Mode >
| Full Text Search >
| Future Proof >
| Generic >
| HTML >
| Hash >
| Hiding Line Numbers >
| Hiding Tabs >
| How to get started >
| INCLUDE() and EXCLUDE() >
| Imperative Evaluation Order >
| JSON >
| LIMIT() >
| LOG() >
| Link to Character Location >
| Links >
| Local >
| MAX_LENGTH() >
| Metadata >
| Metadata Syntax >
| Missing Links >
| Navigation >
| Node Browser >
| Node IDs >
| Node Link ^ Links >
| Node Link ^ Urtext Syntax >
| Node Output >
| Node Titles >
| Node browser shows the base project >
| Nodes >
| Nodes as Metadata Values >
| One node >
| Open source >
| Operators >
| POP >
| POP and PULL >
| PULL >
| Parameters ^ COLLECT() >
| Parameters ^ MAX_LENGTH() >
| Parameters ^ SHOW() >
| Parameters ^ TREE() >
| Parameters ^ WHEN() and Action Links >
| Plain Text >
| Plaintext >
| Pointer >
| Project Naming (Identification) >
| Projects >
| Projects, Structure and Compiling >
| Propagating metadata to descendents >
| Python >
| Pythonista : Use the "?" Urtext Button. Results will be updated in real time in the view behind the search field. To exit, tap outside the search field. >
| REINDEX() >
| Remove Indent Guides >
| SHOW() >
| SORT() >
| STATS() >
| Save on Focus Lost >
| Search >
| Searching >
| Shorthand ^ INCLUDE() and EXCLUDE() >
| Shorthand ^ TARGET() >
| Some Directive >
| Some Other included folder >
| Space-Underscore >
| Sublime : select                  from the command pallete. This provides an input panel on the lower edge of the screen. Dynamically search results will be shown in a scratch view as you enter search terms. Press ESC to cancel.  Results include links to >
| Sublime Text Commands for Linking >
| Sublime Text Interface Tips >
| Sublime Text Key Bindings >
| Syntax Highlighting >
| System Keys >
| TARGET() >
| TEXT() >
| TREE() >
| Table of Contents >
| Time Zones >
| Timestamp Wrappers >
| Timestamps >
| Title Key >
| Tracking Node Dates and Times >
| Traverse Mode >
| Urtext Starter Project >
| Urtext Syntax >
| Using Links >
| Using Multiple Projects >
| Using a Sublime Project for an Urtext Project >
| Viewing Linked Relationships >
| Virtual Targets >
| WHEN() and Action Links >
| Web/HTTP(S) Links >
| Wildcard >
| Word Wrap in Traverse Mode >
| _newest_timestamp is returning the _oldest_timestamp if it's retrieved from the parent >
| again collecting timestamps by using the parent cuases issues here. Also this node does not always get included in dynamic output >
| another node >
| another node ... >
| clipboard _ >
| console _ >
| etc. >
| log _ >
| metadata is not getting pulled from hash keys >
| paths ^ project_settings >
| popup _ >
| project_settings >
| self >
}

See Next: | INCLUDE() and EXCLUDE() >


