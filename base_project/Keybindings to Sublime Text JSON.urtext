Keybindings to Sublime Text JSON _

%%Python
class KeybindingsToJson:

	name = ["KEY_BINDINGS_TO_JSON"]
	import json
	import os

	def dynamic_output(self, current_text):
		keybindings = {}
		set_commands = []
		for node in self.frame.included_nodes:
			set_commands.extend(node.metadata.get_keys())
			set_commands = list(set(set_commands))
			for command in set_commands:
				if command == 'title': continue
				key_binding = node.metadata.get_first_value(command)
				if key_binding:
					keybindings[command] = {
						"command": "run_urtext_call",
						"keys": [key_binding.text],
						"args": { "urtext_call" : command},
						}

		sublime_keymap = self.os.path.join(self.os.path.dirname(self.project_list.base_project_path), "../Default.sublime-keymap")
		current_settings = []
		if self.os.path.exists(sublime_keymap):
			with open(sublime_keymap, "r") as f:
				contents = f.read()
			current_settings = self.json.loads(contents)
		new_settings = []
		for k in current_settings:
			if (k["command"] not in [s["command"] for s in new_settings]):
				new_settings.append(k)
		keybindings_list = sorted([keybindings[k] for k in keybindings], key = lambda k: k["args"]["urtext_call"])
		new_settings.extend(keybindings_list)
		with open(sublime_keymap, "w") as f:
			f.write(self.json.dumps(new_settings, indent=4))
		return current_text + '\n Keybindings written to %s' % self.utils.make_file_link(sublime_keymap)

ThisProject.add_call(KeybindingsToJson)

%%