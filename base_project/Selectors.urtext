Selectors _


{ #bug dropped nodes should not drop the whole file}


{ To Next Node _
%%Python
class ToNextNodeCommand(UrtextTextCommand):

	import re

    def run(self, edit):
    	contents = self.project_list.run_editor_method('get_buffer')
    	position = self.project_list.run_editor_method('get_position')
        next_wrapper = self.re.search(r'|'.join([
                self.syntax.opening_wrapper,
                self.syntax.bullet,
                self.syntax.node_pointer
            ]),
            contents[position:])
        if next_wrapper:
        	self.project_list.run_editor_method('set_position', position)
            position_file(next_wrapper.a)
ThisProject.add_selector(NewFileNode) 
%%
}


{ To Previous Node _
%%Python
class ToPreviousNodeCommand(UrtextTextCommand):

    def run(self, edit):
        all_previous_opening_wrappers = [r.a for r in self.view.find_all(
            '|'.join([
                syntax.opening_wrapper,
                syntax.bullet,
                syntax.node_pointer
            ])) if r.a < self.view.sel()[0].a]
        if all_previous_opening_wrappers:
            self.view.sel().clear()
            self.view.sel().add(all_previous_opening_wrappers[-1])
            position_file(all_previous_opening_wrappers[-1])
ThisProject.add_selector(NewFileNode)
%%
}


{ Urtext Starter Project _
%%Python
class UrtextStarterProjectCommand(sublime_plugin.TextCommand):
   
    def run(self, edit):
        def create_project(path):
            ProjectList.make_starter_project(path)
            global _UrtextProjectList
            if not _UrtextProjectList:
                _UrtextProjectList = ProjectList(path, editor_methods=editor_methods)
            else:
                _UrtextProjectList.add_project(path)
        sublime.select_folder_dialog(create_project)
ThisProject.add_selector(NewFileNode)
%%
}

