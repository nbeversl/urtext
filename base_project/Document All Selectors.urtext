Document All Selectors _ 

%%Python

class AllSelectorsDocs:
	name = ['DOCS_SELECTORS']

	def dynamic_output(self, current_text):

		def content(s):
			contents = ['{ ', s.name, ' _\n\n',
			self.utils.make_selector_link(s.selector_string), '\n',
			s.doc()]

			if 'Sublime Text Keybindings' in self.frame.project.nodes:
				keybinding = self.frame.project.nodes['Sublime Text Keybindings'].metadata.get_first_value(s.selector_string)
				if keybinding:
					contents.append('\ncurrent keybinding: %s' % keybinding.text)
			contents.append('\n}\n')
			return ''.join(contents)

		return current_text + '\n\n'.join([content(s) for s in self.project_list.selectors.values()])

ThisProject.add_call(AllSelectorsDocs)
%%